<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security.xsd">
    <!--权限控制的配置
            使用jsr250注解时可以省略"ROLE_"前缀，即@RolesAllowed({"USER","ADMIN"})，并且需要额外导入依赖
            在使用secured注解时不能省略，即 @Secured("ROLE_ADMIN")，secured时spring-security自带的-->
    <security:global-method-security jsr250-annotations="enabled" pre-post-annotations="enabled" secured-annotations="enabled"></security:global-method-security>
    <!--<security:global-method-security secured-annotations="enabled"></security:global-method-security>
    <security:global-method-security pre-post-annotations="enabled"></security:global-method-security>-->


    <!-- 配置不拦截的资源 -->
    <security:http security="none" pattern="/login.jsp" />
    <security:http security="none" pattern="/failure.jsp" />
    <security:http security="none" pattern="/css/**" />
    <security:http security="none" pattern="/img/**" />
    <security:http security="none" pattern="/plugins/**" />

    <!--配置具体的规则
        auto-config ="true" 表示不用自己编写登录的页面，框架提供默认登录页面
        use-expression="false" 是否使用SPEL表达式（目前未学习过）-->
<!--    <security:http auto-config="true" use-expressions="false">
        &lt;!&ndash;配置具体的拦截规则 pattern="请求路径的规则" access="访问系统的人，必须有ROLE_USER的角色"&ndash;&gt;
        <security:intercept-url pattern="/**" access="ROLE_USER,ROLE_ADMIN"/>-->
    <!--现在使用表达式-->
    <security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_USER,ROLE_ADMIN')"/>
        <!--定义跳转的具体页面-->
        <security:form-login login-page="/login.jsp"
                             login-processing-url="/login.do"
                             default-target-url="/index.jsp"
                             authentication-failure-url="/failure.jsp"
                             authentication-success-forward-url="/pages/main.jsp"/>
        <!--关闭跨域请求-->
        <security:csrf disabled="true"/>
        <!--退出-->
        <security:logout invalidate-session="true" logout-url="/logout.do" logout-success-url="/login.jsp"/>
    </security:http>

    <!--切换成数据库中的用户名和密码-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userService">
            <!--配置加密的方式-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="passwordEncoder"/>

</beans>